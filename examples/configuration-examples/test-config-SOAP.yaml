test_root:
    max_points: 12.0
    initial_steps: 
        # spusti spring soap webovou aplikaci
        - run_app: "java -jar build/libs/book-web-service-0.1.0.jar"
        # pocka na spusteni spring aplikace (cekana na string: Started SOAPBookServiceApplication in)
        - create_filter_action:
            name: "app-std-out"
            text: "Started SOAPBookServiceApplication in"
            mode: "contains"
            case_sensitive: true
        - wait_until:
            module_name: "app-std-out"
            time_out: 40000
        # vytvori tester pro SOAP
        - create_soap_tester:
            name: "soap-tester"
            url: "http://localhost:8080/ws"
        # nacte sablony pro autor requesty
        - read_file:
            var_name: "tmp-get-author"
            file_path: "request/request_get_author.xml"
        - read_file:
            var_name: "tmp-create-author"
            file_path: "request/request_create_author.xml"
        - read_file:
            var_name: "tmp-delete-author"
            file_path: "request/request_delete_author.xml"
        # nacte sablony pro book requesty
        - read_file:
            var_name: "tmp-get-book"
            file_path: "request/request_get_book.xml"
        - read_file:
            var_name: "tmp-create-book"
            file_path: "request/request_create_book.xml"
        - read_file:
            var_name: "tmp-update-book"
            file_path: "request/request_update_book.xml"
        - read_file:
            var_name: "tmp-delete-book"
            file_path: "request/request_delete_book.xml"
    test_suites: 
        - test_suite:
            name: "Testování správy autorů"
            delay: 500
            test_cases: 
                - test_case:
                    name: "Test vytvoření autora"
                    description: "V tomto testovacím připadě bude vytvořen jeden autor. Následně bude ověřeno, zda bylo jeho vytvoření úspěšné."
                    steps: 
                        # vytvori xml pozadavek z templatu pro vytvoreni autora
                        - replace:
                            to_var: "request"
                            from_var: "tmp-create-author"
                            str_from: ["TMP_ID", "TMP_NAME", "TMP_SURNAME"]
                            str_to: ["0", "George", "Orwell"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"
                        # ziska id nove vytvoreneho uzivatele z odpovedi serveru. v json objektu pristoupi k hodnote id do hloubky: createAuthorResponse->author->id
                        - json_get:
                            to_var: "id"
                            from_var: "soap-tester-last-msg"
                            param_name: "createAuthorResponse:author:id"
                        # ziska uzivatele zpet pro overeni
                        - replace:
                            to_var: "request"
                            from_var: "tmp-get-author"
                            str_from: ["TMP_ID"]
                            str_to: ["$id"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"
                        # overeni
                        - assert_json: 
                            var_name: "soap-tester-last-msg"
                            expected: '{"getAuthorResponse": {"author": {"id": "$id", "name": "George", "surname": "Orwell"}}}'
                            exact_mode: false
                - test_case:
                    name: "Test vytvoření autora s neplatnými údaji"
                    description: "V tomto testovacím připadě bude vytvořen jeden autor, ale jeho jméno bude neplatné. Předpokládá se, že takový autor nebude vytvořen."
                    steps: 
                        # vytvori xml pozadavek z templatu pro vytvoreni neplatneho autora
                        - replace:
                            to_var: "request"
                            from_var: "tmp-create-author"
                            str_from: ["TMP_ID", "TMP_NAME", "TMP_SURNAME"]
                            str_to: ["0", "Invalid name", "Surname"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"
                        # zpracuje odpoved serveru, prepoklada se neuspech
                        - assert_string:
                            var_name: "soap-tester-last-msg"
                            expected: "ERROR:"
                            mode: "contains"
                            case_sensitive: false
                - test_case:
                    name: "Test odstranění autora"
                    description: "V rámci tohoto testovacího případu bude testováno, zda je možné odstranit autora z databáze."
                    steps: 
                        # vytvori xml pozadavek z templatu pro vytvoreni autora
                        - replace:
                            to_var: "request"
                            from_var: "tmp-create-author"
                            str_from: ["TMP_ID", "TMP_NAME", "TMP_SURNAME"]
                            str_to: ["0", "Ernest", "Hemingway"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"
                        # ziska id nove vytvoreneho uzivatele z odpovedi serveru. v json objektu pristoupi k hodnote id do hloubky: createAuthorResponse->author->id
                        - json_get:
                            to_var: "id"
                            from_var: "soap-tester-last-msg"
                            param_name: "createAuthorResponse:author:id"
                        # vytvori pozadavek pro odstraneni tohoto autora
                        - replace:
                            to_var: "request"
                            from_var: "tmp-delete-author"
                            str_from: ["TMP_ID"]
                            str_to: ["$id"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"   
                        # overi zda byl autor opravdu odstranen
                        - replace:
                            to_var: "request"
                            from_var: "tmp-get-author"
                            str_from: ["TMP_ID"]
                            str_to: ["$id"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"
                        # je ocekavan fault v odpovedi serveru
                        - assert_string:
                            var_name: "soap-tester-last-msg"
                            expected: "ERROR:"
                            mode: "contains"
                            case_sensitive: false
        - test_suite:
            name: "Testování správy knih"
            delay: 500
            initial_steps:
                # vytvoreni autora
                - replace:
                    to_var: "request"
                    from_var: "tmp-create-author"
                    str_from: ["TMP_ID", "TMP_NAME", "TMP_SURNAME"]
                    str_to: ["0", "George", "Orwell"]
                - module_send:
                    name: "soap-tester"
                    message: "$request"
                # ziska jeho id
                - json_get:
                    to_var: "id-author"
                    from_var: "soap-tester-last-msg"
                    param_name: "createAuthorResponse:author:id"
            test_cases: 
                - test_case:
                    name: "Test vytvoření knihy"
                    description: "V tomto testovacím připadu bude vytvořena jedna kniha. Následně bude ověřeno, zda byla uspěšně vytvořena."
                    steps: 
                        # vytvoreni knihy
                        - replace:
                            to_var: "request"
                            from_var: "tmp-create-book"
                            str_from: ["TMP_ID", "TMP_TITLE", "TMP_AUTHOR_ID"]
                            str_to: ["0", "Animal Farm", "$id-author"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"
                        # ziska id knihy z odpovedi serveru pri vytvoreni knihy
                        - json_get:
                            to_var: "id-book"
                            from_var: "soap-tester-last-msg"
                            param_name: "createBookResponse:book:id"
                        # ziska knihu pomoci get requestu
                        - replace:
                            to_var: "request"
                            from_var: "tmp-get-book"
                            str_from: ["TMP_ID"]
                            str_to: ["$id-book"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"
                        # overeni
                        - assert_json: 
                            var_name: "soap-tester-last-msg"
                            expected: '{"getBookResponse": {"book": {"id": "$id-book", "title": "Animal Farm", "authorID": "$id-author"}}}'
                            exact_mode: false
                - test_case:
                    name: "Test vytvoření knihy s neplatným údajem"
                    description: "V tomto testovacím připadě bude vytvořena jedna kniha, která má neplatné údaje. Předpokládá se, že nebude vytvořena."
                    steps: 
                        # vytvoreni knihy
                        - replace:
                            to_var: "request"
                            from_var: "tmp-create-book"
                            str_from: ["TMP_ID", "TMP_TITLE", "TMP_AUTHOR_ID"]
                            str_to: ["0", "", "$id-author"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"
                        # zpracuje odpoved serveru, v odpovedi se musi nachazet "Fault"
                        - assert_string:
                            var_name: "soap-tester-last-msg"
                            expected: "ERROR:"
                            mode: "contains"
                            case_sensitive: false
                - test_case:
                    name: "Test změny dat knihy"
                    description: "V tomto testovacím případě bude testováno, zda je možné změnit data již uložené knihy."
                    steps: 
                        # vytvoreni nove knihy
                        - replace:
                            to_var: "request"
                            from_var: "tmp-create-book"
                            str_from: ["TMP_ID", "TMP_TITLE", "TMP_AUTHOR_ID"]
                            str_to: ["0", "1984", "$id-author"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"
                        # ziska id knihy z odpovedi serveru pri vytvoreni knihy
                        - json_get:
                            to_var: "id-book"
                            from_var: "soap-tester-last-msg"
                            param_name: "createBookResponse:book:id"
                        # pomoci update pozadavku zmeni data v knize
                        - replace:
                            to_var: "request"
                            from_var: "tmp-update-book"
                            str_from: ["TMP_ID", "TMP_TITLE", "TMP_AUTHOR_ID"]
                            str_to: ["$id-book", "The Road to Wigan Pier", "$id-author"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"
                        # ziska data o aktualizovane knize
                        - replace:
                            to_var: "request"
                            from_var: "tmp-get-book"
                            str_from: ["TMP_ID"]
                            str_to: ["$id-book"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"
                        # overi zda jsou udaje zmeneny
                        - assert_json: 
                            var_name: "soap-tester-last-msg"
                            expected: '{"getBookResponse": {"book": {"id": "$id-book", "title": "The Road to Wigan Pier", "authorID": "$id-author"}}}'
                            exact_mode: false
                - test_case:
                    name: "Test odstranění knihy"
                    description: "Bude testováno, zda je možné odstranit knihu z databaze pomocí odeslaného požadavku."
                    steps: 
                        # vytvoreni nove knihy
                        - replace:
                            to_var: "request"
                            from_var: "tmp-create-book"
                            str_from: ["TMP_ID", "TMP_TITLE", "TMP_AUTHOR_ID"]
                            str_to: ["0", "Down and Out in Paris and London", "$id-author"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"
                        # ziska id knihy z odpovedi serveru pri vytvoreni knihy
                        - json_get:
                            to_var: "id-book"
                            from_var: "soap-tester-last-msg"
                            param_name: "createBookResponse:book:id"
                        # ziska data o ulozene knize
                        - replace:
                            to_var: "request"
                            from_var: "tmp-get-book"
                            str_from: ["TMP_ID"]
                            str_to: ["$id-book"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"
                        # overi zda jsou udaje zmeneny
                        - assert_json: 
                            var_name: "soap-tester-last-msg"
                            expected: '{"getBookResponse": {"book": {"id": "$id-book", "title": "Down and Out in Paris and London", "authorID": "$id-author"}}}'
                            exact_mode: false
                        # vytori a odesle pozadavek na odstraneni knihy
                        - replace:
                            to_var: "request"
                            from_var: "tmp-delete-book"
                            str_from: ["TMP_ID"]
                            str_to: ["$id-book"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"
                        # znovu se pokusi ziskat data u knize ktera byla nyni odstranena 
                        - replace:
                            to_var: "request"
                            from_var: "tmp-get-book"
                            str_from: ["TMP_ID"]
                            str_to: ["$id-book"]
                        - module_send:
                            name: "soap-tester"
                            message: "$request"
                        # prepoklada se ze uz neexistuje
                        - assert_string:
                            var_name: "soap-tester-last-msg"
                            expected: "ERROR:"
                            mode: "contains"
                            case_sensitive: false
                        